# Default values for zur.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
client:
  appName: client
  autoscaling:
    enabled: true
  replicaCount: 1
  image: 
    name: yanirdocker/multi-client
    tag: latest
  service:
    type: ClusterIP
    port: 3000
  component: web

postgres:
  name: postgres
  replicaCount: 1
  component: postgres
  claimName: database-persistent-volume-claim
  containers:
    name: postgres
    image: postgres
    tag: latest
    ports: 
      - containerPort: 5432
    volumeMounts:
      - name: postgres-storage
        mountPath: /var/lib/postgresql/data
        subPath: postgres
    env:
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: pgpassword
            key: PGPASSWORD           
  service:
    type: ClusterIP
    ports:
     - port: 5432
       targetPort: 5432    


pvc: 
  name: database-persistent-volume-claim
  accessMode: ReadWriteOnce
  storageSize: 2Gi

redis:
  name: redis
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: redis
    template:
      metadata:
        labels:
          component: redis
      spec:
        containers:
          - name: redis
            image: redis
            ports:
              - containerPort: 6379
  service:
    type: ClusterIP
    selector:
      component: redis
    ports:
      - port: 6379
        targetPort: 6379 

server:
  name: server
  spec:
    replicas: 3
    selector:
      matchLabels:
        component: server  
    template:
      metadata:
        labels:
          component: server
      spec:
        containers:
          - name: server
            image:
              name: yanirdocker/multi-server
              tag:  latest  
            ports:  
              - containerPort: 5000
            env: 
              - name: REDIS_HOST
                value: redis-cluster-ip-service
              - name: REDIS_PORT
                value: '6379'
              - name: PGUSER
                value: postgres
              - name: PGHOST
                value: postgres-cluster-ip-service
              - name: PGPORT
                value: '5432'
              - name: PGDATABASE
                value: postgres
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: pgpassword
                    key: PGPASSWORD             
  service:
    selector:
      component: server
    ports:
      - port: 5000
        targetPort: 5000
       
worker:
  name: worker
  replicas: 1  
  selector:
    matchLabels:
      component: worker
  template: 
    metadata:
      labels:
        component: worker
    spec:
      containers:
        - name: worker
          image: yanirdocker/multi-worker
          tag: latest
          env: 
            - name: REDIS_HOST
              value: redis-cluster-ip-service
            - name: REDIS_PORT
              value: '6379' 


image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
